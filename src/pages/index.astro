---
import { fetchArticles } from '../data/articles';
import RSSParser from 'rss-parser';

const articles = await fetchArticles();
const uniqueTags = Array.from(
  new Set(articles.flatMap(a => a.tags))
).sort();

// —————————————————————————————————————————————————————————————————————————————
// Парсим RSS последнего поста Telegram через RSSHub и достаём только ID
// —————————————————————————————————————————————————————————————————————————————
const CHANNEL = 'analytics_today';
const RSS_URL = `https://rsshub.app/telegram/channel/${CHANNEL}`;
let lastPostId: string | null = null;

try {
  const parser = new RSSParser({
    customFields: { item: [['description', 'contentSnippet']] }
  });
  const feed = await parser.parseURL(RSS_URL);
  const latest = feed.items?.[0];
  if (latest?.link) {
    // ссылка вида "https://t.me/analytics_today/123"
    lastPostId = latest.link.split('/').pop() || null;
  }
} catch (e) {
  console.warn('Не удалось получить ленту TG:', e);
}

// перемешиваем статьи каждый раз
articles.sort(() => Math.random() - 0.5);
---

<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon.ico" type="image/x-icon" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Project Digest</title>

    <!-- Yandex.Metrika counter -->
    <script type="text/javascript">
      (function(m,e,t,r,i,k,a){
        m[i]=m[i]||function(){(m[i].a=m[i].a||[]).push(arguments)};
        m[i].l=1*new Date();
        for(let j=0; j<document.scripts.length; j++){
          if(document.scripts[j].src===r) return;
        }
        k=e.createElement(t), a=e.getElementsByTagName(t)[0];
        k.async=1; k.src=r; a.parentNode.insertBefore(k,a);
      })(window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");
      ym(103118856, "init", {
        clickmap:true, trackLinks:true, accurateTrackBounce:true, webvisor:true
      });
    </script>
    <noscript>
      <div>
        <img src="https://mc.yandex.ru/watch/103118856"
             style="position:absolute; left:-9999px;" alt="" />
      </div>
    </noscript>
    <!-- /Yandex.Metrika counter -->

    <style>
      body { font-family: sans-serif; padding: 20px; }
      header, footer { text-align: center; padding: 2rem 1rem; }
      header h1 { margin: 0; font-size: 1.5rem; }
      #search { padding: 0.5rem; width: 100%; box-sizing: border-box; }
      #filters button { margin: 0 5px 5px 0; }
      #list { display: grid; gap: 1rem; grid-template-columns: 1fr; }
      @media (min-width: 768px) {
        #list { grid-template-columns: repeat(2, 1fr); }
      }
      .card {
        border: 1px solid #ccc; padding: 1rem; background: #fff;
        border-radius: 4px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }
      .card h3 {
        display: flex; justify-content: space-between; align-items: center;
        margin: 0 0 0.5em;
      }
      .fav-btn {
        background: none; border: none; font-size: 1.2em;
        cursor: pointer; color: gold; line-height: 1;
      }
      .tags li {
        display: inline-block; background: #eef; padding: 2px 6px;
        margin: 2px; border-radius: 4px; font-size: .85em;
      }
      #pagination {
        margin-top: 20px; display: flex; align-items: center; gap: 10px;
      }
      #pagination button { padding: 6px 12px; }
      @media (max-width: 600px) {
        header h1 { font-size: 1.25rem; }
        footer { font-size: .95rem; padding: 1.5rem 1rem; }
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Дайджест по управлению проектами</h1>
    </header>

    <!-- Поиск -->
    <input id="search" type="text" placeholder="Поиск…" />

    <!-- Тег-фильтры -->
    <div id="filters">
      <button data-tag="">Все</button>
      <button data-tag="favorites">Избранное</button>
      {uniqueTags.map(tag => <button data-tag={tag}>{tag}</button>)}
    </div>

    <!-- Список статей -->
    <div id="list" data-articles={JSON.stringify(articles)}></div>

    <!-- Пагинация -->
    <div id="pagination">
      <button id="prev" disabled>← Предыдущая</button>
      <span id="page-info">Страница 1 из 1</span>
      <button id="next" disabled>Следующая →</button>
    </div>

    <script>
      (function(){
        const listEl   = document.getElementById('list');
        const inputEl  = document.getElementById('search');
        const filtEl   = document.getElementById('filters');
        const prevBtn  = document.getElementById('prev');
        const nextBtn  = document.getElementById('next');
        const pageInfo = document.getElementById('page-info');

        let all       = JSON.parse(listEl.dataset.articles);
        let filtered  = all.slice();
        const pageSize  = 20;
        let currentPage = 1;
        let favorites   = JSON.parse(localStorage.getItem('favorites') || '[]');

        function renderPage() {
          const start = (currentPage - 1) * pageSize;
          const pageItems = filtered.slice(start, start + pageSize);
          listEl.innerHTML = pageItems.map(a => {
            const isFav = favorites.includes(a.link);
            return `
              <article class="card">
                <h3>
                  <a href="${a.link}" target="_blank">${a.title}</a>
                  <button class="fav-btn" data-link="${a.link}"
                          title="${isFav?'Убрать':'В избранное'}">
                    ${isFav?'★':'☆'}
                  </button>
                </h3>
                <p>${a.summary}</p>
                ${a.pdf
                  ? `<p><a href="${a.pdf}" target="_blank" rel="noopener">PDF</a></p>`
                  : ''
                }
                ${a.tags.length
                  ? `<ul class="tags">${a.tags.map(t=>`<li>${t}</li>`).join('')}</ul>`
                  : ''
                }
              </article>`;
          }).join('');

          const totalPages = Math.ceil(filtered.length / pageSize) || 1;
          prevBtn.disabled = currentPage <= 1;
          nextBtn.disabled = currentPage >= totalPages;
          pageInfo.textContent = `Страница ${currentPage} из ${totalPages}`;
        }

        function applyFilter() {
          const q = inputEl.value.trim().toLowerCase();
          const activeTag = filtEl.querySelector('button.active')?.dataset.tag || '';
          filtered = all.filter(a => {
            if (activeTag === 'favorites') return favorites.includes(a.link);
            return !activeTag || a.tags.includes(activeTag);
          }).filter(a => !q
            || a.title.toLowerCase().includes(q)
            || a.summary.toLowerCase().includes(q)
          );
          currentPage = 1;
          renderPage();
        }

        // События
        filtEl.addEventListener('click', e => {
          if (e.target.tagName!=='BUTTON') return;
          filtEl.querySelectorAll('button').forEach(b=>b.classList.remove('active'));
          e.target.classList.add('active');
          applyFilter();
        });
        listEl.addEventListener('click', e => {
          if (!e.target.classList.contains('fav-btn')) return;
          const link = e.target.dataset.link;
          const idx = favorites.indexOf(link);
          idx>=0 ? favorites.splice(idx,1) : favorites.push(link);
          localStorage.setItem('favorites', JSON.stringify(favorites));
          renderPage();
        });
        inputEl.addEventListener('input', applyFilter);
        prevBtn.addEventListener('click', ()=>{ if(currentPage>1){currentPage--;renderPage();}});
        nextBtn.addEventListener('click', ()=>{ const tot=Math.ceil(filtered.length/pageSize)||1; if(currentPage<tot){currentPage++;renderPage();}});

        // Инициализация
        filtEl.querySelector('button[data-tag=""]').classList.add('active');
        renderPage();
      })();
    </script>

    <!-- Виджет Telegram -->
    {lastPostId ? (
      <div style="max-width:600px; margin:2rem auto;">
        <script async
                src="https://telegram.org/js/telegram-widget.js?22"
                data-telegram-post={`${CHANNEL}/${lastPostId}`}
                data-width="100%">
        </script>
      </div>
    ) : (
      <div style="max-width:600px; margin:2rem auto;">
        <script async
                src="https://telegram.org/js/telegram-widget.js?22"
                data-telegram-channel={CHANNEL}
                data-width="100%">
        </script>
      </div>
    )}

    <!-- Футер с подписью -->
    <footer style="
      margin-top: 40px; padding-top: 20px;
      border-top: 1px solid #ddd; font-size: 0.9em;
      color: #555; text-align: center;
    ">
      <p>© 2025 Борис Ишкин</p>
      <p>
        Мой сайт:
        <a href="https://ishkin.ru" target="_blank">ishkin.ru</a> |
        Телеграм:
        <a href="https://t.me/analytics_today" target="_blank">@analytics_today</a>
      </p>
    </footer>
  </body>
</html>
